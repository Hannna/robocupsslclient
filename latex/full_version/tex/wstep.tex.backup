\chapter[Wstęp ]{Wstęp}
Szybki postęp techniczny zapoczątkowany w XX wieku umożliwił rozwój nowych dziedzin nauki, między innymi robotyki. Obecnie maszyny mogą zastępować ludzi przy wykonywaniu wielu rozmaitych czynności.
Innowacyjne rozwiązania stwarzają jednak potrzebę opracowania wymagającego środowiska testowego. Jedną z takich inicjatyw, mających na celu wspieranie rozwoju i popularyzację robotyki, są rozgrywki
RoboCup. W obrębie przedsięwzięcia wyróżnionych jest kilka lig różniących się zasadami oraz typem robotów biorących udział w zawodach.
Głównym celem przyświecającym organizatorom jest stworzenie do 2050 roku drużyny robotów zdolnej wygrać z ówczesnymi mistrzami świata.
Liga RoboCup budzi zainteresowanie na całym świecie a prace z nią związane  są prowadzone w wielu środowiskach akademickich.
W Polsce nie została jeszcze stworzona drużyna, która wystartowałaby w tych rozgrywkach.
Rozwiązanie problemu stawia przed uczestnikami wyzwania konstrukcyjne oraz algorytmiczne. Niniejsza praca skupiona jest głównie na aspektach algorytmicznych. Omówiony zostanie problem sterowania
zawodnikiem, wyznaczania bezkolizyjnej ścieżki do celu oraz realizacji prostych zachowań niezbędnych podczas rozgrywek.
\section{Zakres pracy}
Niniejsza praca jest niejako kontynuacją działań podjętych podczas realizacji pracy inżynierskiej. Tematyka w niej poruszona dotyczy na wstępie samych rozgrywek RoboCup. Jak już napisano we 
wstępie przedsięwzięcie dotyczy głównie rozgrywek piłkarskich, w których udział biorą roboty. W ostatnich latach robotyka cieszy się szerokim zainteresowaniem, dlatego też sam projekt
został poszerzony o nowe obszary tematyczne.
Obecnie podział jest następujący:
\begin{itemize}
	\item \emph{RoboCupSoccer}, czyli rozgrywki piłkarskie autonomicznych robotów,
	\item \emph{RoboCupRescue}, obejmujący działania robotów w sytuacjach kryzysowych, czy niebezpiecznych dla ludzi,
	\item \emph{RoboCup@Home}, skupiający się na robotyce mającej na celu pomaganie człowiekowi w codziennych czynnościach,
	\item \emph{RoboCupJunior} popularyzujący robotykę wśród młodzieży.
\end{itemize}

Same rozgrywki piłkarskie \emph{RoboCup Soccer} także nie są jednolite, zostały one podzielone w zależności od konstrukcji mechanicznej zawodników. Więcej informacji na ten temat zostanie zaprezentowanych w rozdziale
\ref{chap:robocup}. W ramach samej pracy skupiono się na lidze małych robotów (\emph{Small-size League}), ponieważ już wcześniej prowadzone były prace w tym kierunku na Wydziale Elektroniki i 
Technik Informacyjnych Politechniki Warszawskiej.

W dalszej części pracy opisano nowe testowe środowisko symulacyjne oraz wprowadzone poprawki modyfikujące działanie symulatora.
Ponieważ wcześniejsze eksperymenty prowadzono w środowisku \emph{Player/Stage/Gazebo}, zdecydowano się na dalsze prace na tej platformie.
Opracowane zostały nowe modele zawodników wzorowane na rzeczywistych, holonomicznych robotach
biorących udział w rozgrywkach. Przygotowano sterownik (element symulatora) umożliwiający: kontrolę nad prędkością robota (wyposażono go dodatkowo w regulator PID), prowadzenie piłki, jak i oddawanie strzału.
 W stosunku do poprzednich prac zdecydowano się także na implementację oraz poddanie testom nowego algorytmu nawigacji.  Rozwiązanie to zostało przetestowane w takich samych warunkach 
jak poprzednie. Dokonano także analizy i porównania otrzymanych wyników. Zaprezentowano również inne, stosowane w robotyce, metody unikania kolizji. Jeden z nich został zaimplementowany w celu
rozwiązywania mniej złożonych zadań takich jak odjechanie od przeszkody w momencie wystąpienia kolizji.

W tekście przedstawiono jedno z podejść, powszechnie stosowanych w rozgrywkach do koordynacji i planowania działań zawodników \mbox{\textit{Skill Tactics Play}}~(STP)~\cite{stp}.
Zakłada ono planowanie zachowań drużyny na trzech poziomach. Każdy odnosi się do innej warstwy abstrakcji.
\begin{enumerate} 
  \item Najwyżej w hierarchii znajduje się poziom \texttt{Play}. Przez to pojęcie rozumiany jest plan gry dla całej drużyny uwzględniający koordynację
  poczynań pomiędzy zawodnikami. Plan zakłada również przydział zawodnika do określonej roli. W oryginalnym rozwiązaniu role przydzielane są dynamicznie w zależności od sytuacji na boisku.
  W obrębie danego planu zawodnik wykonuje swoją rolę (sekwencję kilku działań (\textit{Tactic})) aż do momentu zakończenia danego planu lub wyznaczenia kolejnego.
  
  \item Przez \textit{Tactic} rozumiany jest plan działań w obrębie jednej roli. Taktyka ma na celu wykonanie przez robota pojedynczej złożonej akcji.
  Przykładem może być strzał na bramkę. Robot dostaje polecenie oddania strzału na bramkę, zatem plan jego poczynań ma doprowadzić
 do sytuacji, w której osiągnie on pozycję umożliwiającą oddanie strzału na bramkę z określonym powodzeniem.
 Plan na szczeblu pojedynczego robota jest wykonywany do momentu zmiany strategii gry całej drużyny (ponownego przydziału robotów do ról).
 Przykładowe \textit{Tactics}:
 \begin{itemize}
  \item strzał na bramkę,
  \item podanie piłki,
  \item odebranie podania,
  \item blokowanie innego robota,
  \item wyjście na pozycję,
  \item bronienie pozycji,
  \item dryblowanie z piłką.
 \end{itemize}

  Pojedyncza taktyka determinuje skończony automat stanów, w którym elementami są \textit{Skills}. Wykonanie bieżącej taktyki sprowadza się do przechodzenia pomiędzy kolejnymi zachowaniami robota w obrębie
  danego automatu.
\newpage
  \item Najniżej w hierarchii znajduje się warstwa \textit{Skills}, odnosi się ono do konkretnych umiejętności robota, takich jak:
    \begin{itemize}
    \item przechwytywanie piłki,
    \item oddawanie strzału,
    \item doprowadzenie piłki do celu,
    \item przemieszczenie robota do celu,
    \item podążanie za innym robotem.
    \end{itemize}

  Na tym szczeblu nie występuje koordynacja w obrębie drużyny. W każdym kroku gry powinno być określone jakie zachowanie ma wykonywać robot. Z każdego \textit{Skill}, w każdym momencie określone musi być przejście
  do nowego zadania bądź kontynuowanie tego samego zadania. Przykładowo jeśli zlecimy robotowi przemieszczenie się z piłką do celu a piłka 
  odskoczy robotowi, to powinien do niej podjechać, przechwycić ją, a następnie ponownie prowadzić do zadanego celu (należy jednak cały czas pamiętać, że jeśli nastąpi dobra okazja do strzału
na bramkę, robot powinien ją wykorzystać).
\end{enumerate}

 W ramach pracy w pełni zrealizowane zostały dwie warstwy z oryginalnej hierarchii opisanej powyżej (\textit{Skills} oraz \textit{Tactics}). Aplikację projektowano w taki sposób, aby pozostawić miejsce
 na pełną implementację warstwy \textit{Play}, którą zrealizowano jedynie w stopniu niezbędnym do przeprowadzenia eksperymentów.
Użyteczność algorytmu sprawdzono podczas przeprowadzonych eksperymentów, wzorowanych na rzeczywistych zadaniach eliminacyjnych stosowanych w rozgrywkach RoboCup w ostatnich latach.

\section{Cel pracy}
Za główny cel niniejszej pracy postawiono stworzenie oprogramowania umożliwiającego wykonywanie podstawowych elementów gry w piłkę nożną przez roboty. W tym celu posłużono się architekturą STP. Aby jednak zrealizować to zadanie konieczne było
stworzenie środowiska symulacyjnego, umożliwiającego modelowanie rozgrywki \emph{Small-Size League}. Przy opracowywaniu modelu środowiska starano się w jak największym stopniu odzwierciedlić realia
ligi \emph{Small-Size League}. Po drugie środowisko symulacyjne miało być na tyle elastyczne, aby w przyszłości umożliwiało testowanie różnorodnych rozwiązań sterowania drużyną.
Zachowano schemat przepływu informacji z pracy inżynierskiej, który zamieszczono na rysunku \ref{fig:przeplyw_sterowania}. Stosowany w rozgrywkach \emph{Small-Size League} \textit{videoserver} został
ujęty w osobną warstwę  aplikacji komunikująca się bezpośrednio z symulatorem. Osobną warstwę stanowi także część aplikacji odpowiedzialna za sterowanie robotem.
\begin{figure}[H]
\centering
\includegraphics[scale=0.38]{./zalozenia/przeplyw_sterowania.png}
\caption{Komunikacja pomiędzy warstwami aplikacji} \label{fig:przeplyw_sterowania}
\end{figure}
Główną motywacją takiej architektury było umożliwienie prostego przystosowania aplikacji do sterowania rzeczywistym robotem pobierającym dane z zewnętrznego serwera. 
Ponieważ w rozgrywkach biorą udział roboty holonomiczne, zdecydowano się na odejście od modelu robota o napędzie różnicowym stosowanego w pracy inżynierskiej. Opracowano zatem nowy model wzorowany na rzeczywistych
zawodnikach.
Kolejnym celem pracy, wynikającym bezpośrednio ze zmiany modelu robota, było zaimplementowanie i przetestowanie algorytmu nawigacji w dynamicznym środowisku. Zdecydowano się na algorytm RRT,
postanowiono także porównać jego skuteczność z wcześniej stosowanym CVM.

